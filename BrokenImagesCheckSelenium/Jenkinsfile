
pipeline {
    agent{
	label 'jenkins-agent-ubuntu'
	}

	stages{
		stage('Git checkout') {
			steps{
				echo 'delete any prev project'
			    catchError(buildResult: 'SUCCESS') {
                    deleteDir()
                }
				echo 'check out'
				git branch: 'main', url: 'https://github.com/hawesdarren/training.git'
			}

		}
		stage('Run a test') {
			steps{
				echo 'run a test'
				withEnv(['SELENIUM_HOST=http://selenium-chrome:4444']) {
                    dir('BrokenImagesCheckSelenium') {
                        sh "docker compose -f docker-compose.all.yaml up --exit-code-from gradle --build"
                    }
                }

			}

		}
		stage('Copy artifacts') {
			steps{
				echo 'copy artifacts'
				sh "docker container cp gradle:/app/build/test-results/test// ${env.WORKSPACE}/artifacts/"
    			sh "docker container cp gradle:/app/build/reports/tests/ ${env.WORKSPACE}/artifacts/"
    			archiveArtifacts artifacts: "artifacts/", followSymlinks: false

			}

		}
		stage('Generate a report') {
			steps{
			echo 'Generate report'
			junit   allowEmptyResults: true,
			        keepLongStdio: true,
			        keepProperties: true,
			        testResults: 'artifacts/TEST*.xml'
			}

		}
	}

}